.base-nplus1:
  image: registry.gitlab.com/gitlab-org/gitlab-build-images:gitlab-qa-alpine
  services:
    - docker:stable-dind
  stage: test
  tags:
    - docker
  artifacts:
    when: always
    expire_in: 14d
    paths:
      - ./gitlab-qa-run-*
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    QA_ARTIFACTS_DIR: $CI_PROJECT_DIR
    QA_DEBUG: 1
    QA_CAN_TEST_GIT_PROTOCOL_V2: 'false'
  only:
    refs:
      - schedules
  except:
    variables:
      - $TEST_TYPE != "Gitaly N+1 Tests"
  before_script:
    - gem install gitlab-qa
    - apk add jq curl sed

######################
# N+1 Load Tests
######################
nplus1-environment:
  extends: .base-nplus1
  script:
    # Set user to admin as that's required for feature flag toggle
    - export GITLAB_USERNAME=$GITLAB_ADMIN_USERNAME GITLAB_PASSWORD=$GITLAB_ADMIN_PASSWORD GITLAB_QA_ACCESS_TOKEN=$GITLAB_QA_ADMIN_ACCESS_TOKEN
    # Set correct ee-qa image by polling environment
    - version=$(curl $TARGET_URL/api/v4/version?private_token=$GITLAB_QA_ADMIN_ACCESS_TOKEN)
    # Version exposed by the API currently does not match the deployed version. See: https://gitlab.com/gitlab-org/release/framework/issues/421
    - image_url="dev.gitlab.org:5005/gitlab/omnibus-gitlab/gitlab-ee-qa:$image_tag"
    - gitlab-qa Test::Instance::$TARGET_ENVIRONMENT $image_url --enable-feature gitaly_enforce_requests_limits -- qa/specs/features/api qa/specs/features/browser_ui $([ ! -z $QUARANTINED ] && echo "--tag quarantine")
  only:
    variables:
      - $TARGET_ENVIRONMENT

nplus1-image:
  extends: .base-nplus1
  script:
    - unset GITLAB_USERNAME GITLAB_PASSWORD GITLAB_QA_ACCESS_TOKEN
    - gitlab-qa Test::Instance::Image $TARGET_IMAGE --enable-feature gitaly_enforce_requests_limits -- qa/specs/features/api qa/specs/features/browser_ui $([ ! -z $QUARANTINED ] && echo "--tag quarantine")
  only:
    variables:
      - $TARGET_IMAGE

#######################
##    Report Jobs    ##
#######################
.report:
  image: alpine
  stage: report
  before_script:
    - apk add curl
  only:
    - schedules
  except:
    variables:
      - $CI_SLACK_REPORT != "true"
      - $CI_SLACK_WEBHOOK_URL == null
      - $CI_SLACK_CHANNEL == null

report-slack-nplus1-success:
  extends: .report
  script:
    - bin/slack "Test $TEST_TYPE against $TARGET_ENVIRONMENT$TARGET_IMAGE has passed!\nPipeline - $CI_PIPELINE_URL" ci_passing
  when: on_success
  only:
    variables:
      - $TEST_TYPE == "Gitaly N+1 Tests"

report-slack-nplus1-fail:
  extends: .report
  script:
    - bin/slack "Test $TEST_TYPE against $TARGET_ENVIRONMENT$TARGET_IMAGE has failed!\nPipeline - $CI_PIPELINE_URL" ci_failing
  when: on_failure
  only:
    variables:
      - $TEST_TYPE == "Gitaly N+1 Tests"
