.artillery-base:
  image: ruby:2.6.3-alpine
  before_script:
    - apk add --no-cache gcc g++ make libc6-compat libc-dev nodejs npm
    - npm install
    - gem install bundler -v 2.0.2
    - export BUNDLER_VERSION=2.0.2 && export BUNDLE_PATH__SYSTEM=false
    - bundle install --path vendor/bundle/

#########################
##      MR Checks      ##
#########################
check:artillery:
  stage: check
  extends: .artillery-base
  script:
    - bundle exec artillery/run-scenarios artillery/environments/staging.gitlab.com.yml -- artillery/scenarios/checks/commit_check.yml
  except:
    - schedules

##########################
## Artillery Load Tests ##
##########################
artillery-environment-all-scenarios:
  stage: test
  extends: .artillery-base
  script:
    - bundle exec artillery/run-environment $TARGET_ENVIRONMENT
  only:
    variables:
      - $TEST_TYPE == "Artillery"
  artifacts:
    when: always
    paths:
      - artillery/results/
    expire_in: 14d

artillery-environment-all-scenarios-10x:
  extends: artillery-environment-all-scenarios
  parallel: 10

#######################
##    Report Jobs    ##
#######################
.report: &report
  image: alpine
  stage: report
  cache: {}
  before_script:
    - apk update && apk add git curl bash
  only:
    - schedules
  except:
    variables:
      - $CI_SLACK_REPORT != "true"
      - $CI_SLACK_WEBHOOK_URL == null
      - $CI_SLACK_CHANNEL == null

report-slack-artillery-success:
  extends: .report
  script:
    - artillery_summary_file=$(find artillery/results -name *_aggregated_results.txt -print -quit)
    - artillery_summary=$([ -r $artillery_summary_file ] && echo "\`\`\`$(cat $artillery_summary_file)\`\`\`")
    - bin/slack "Test $TEST_TYPE against $TARGET_ENVIRONMENT has finished! $artillery_summary Pipeline - $CI_PIPELINE_URL" ci_passing
  when: on_success
  only:
    variables:
      - $TEST_TYPE =~ /^Artillery.*/

report-slack-artillery-fail:
  extends: .report
  script:
    - artillery_summary_file=$(find artillery/results -name *_aggregated_results.txt -print -quit)
    - artillery_summary=$([ -r $artillery_summary_file ] && echo "\`\`\`$(cat $artillery_summary_file)\`\`\`")
    - bin/slack "Test $TEST_TYPE against $TARGET_ENVIRONMENT has failed! $artillery_summary Pipeline - $CI_PIPELINE_URL" ci_failing
  when: on_failure
  only:
    variables:
      - $TEST_TYPE =~ /^Artillery.*/
