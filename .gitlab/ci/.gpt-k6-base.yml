stages:
  - check
  - build
  - test
  - report
  - stop

.k6-base:
  image: ruby:2.7-alpine3.13
  before_script:
    - apk add --no-cache build-base curl
    - gem install bundler && bundle config without dev && bundle install

.k6-compare-base:
  extends: .k6-base
  services:
    - docker:stable-dind
  tags:
    - performance
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    OPTIONS_FILE: 60s_2rps
    GPT_CP_DOCKER_IMAGE: registry.gitlab.com/gitlab-org/quality/performance-images/gitlab-ce-performance
  script:
    - apk add docker
    - echo "$GPT_CP_DOCKER_IMAGE:$MAJOR_VERSION.$MINOR_VERSION.0-ce.0"
    - bin/run-gitlab-docker --image $GPT_CP_DOCKER_IMAGE:$MAJOR_VERSION.$MINOR_VERSION.0-ce.0
    - sleep $STARTUP_DELAY
    - bin/run-k6 -s -u -e $ENVIRONMENT_NAME.json -o $OPTIONS_FILE.json -x api_v4_projects_repository_commits_sha_signature
  artifacts:
    when: always
    paths:
      - results/
    expire_in: 14d
  retry:
    max: 2
    when:
      - runner_system_failure
      - stuck_or_timeout_failure
      - unknown_failure

.report-k6-slack-base:
  stage: report
  extends: .k6-base
  script: bin/ci-report-results-slack --channel $CI_SLACK_CHANNEL --test-name $TEST_TYPE --test-result $TEST_RESULT
  except:
    variables:
      - $CI_SLACK_REPORT != "true"
      - $CI_SLACK_CHANNEL == null
  artifacts:
    when: always
    paths:
      - results/
    expire_in: 14d

.report-k6-wiki-base:
  stage: report
  extends: .k6-base
  script: bin/ci-report-results-wiki -p "$WIKI_PAGE"
  when: always
  except:
    variables:
      - $CI_WIKI_REPORT != "true"
  artifacts:
    when: always
    paths:
      - results/
    expire_in: 14d
